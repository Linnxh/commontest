<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <!-- 启用注解 -->
    <mvc:annotation-driven/>
    <!--<mvc:message-converters>-->
    <!--<bean class="org.springframework.http.converter.StringHttpMessageConverter"/>-->
    <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>-->
    <!--</mvc:message-converters>-->
    <!-- 注解扫描的包 -->
    <context:component-scan base-package="com.*">
        <!-- 扫描时跳过 @Controller 注解的JAVA类（控制器） -->
        <!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
    </context:component-scan>
    <!-- 定义页面的基础路径和后缀名 -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <bean id="mySqlDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/lxhtest?useUnicode=true&amp;characterEncoding=UTF-8"/>
        <property name="username" value="root"/>
        <property name="password" value="123123"/>

    </bean>

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="mySqlDataSource"/>
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
    <!-- DAO接口所在包名，Spring会自动查找其下的类 ,包下的类需要使用@MapperScan注解,否则容器注入会失败 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.test.dao"/>
    </bean>
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="mySqlDataSource"/>
    </bean>

    <!-- 将 springSwaggerConfig加载到spring容器 -->
    <bean class="com.mangofactory.swagger.configuration.SpringSwaggerConfig" />
    <!--&lt;!&ndash;&lt;!&ndash; 将自定义的swagger配置类加载到spring容器 &ndash;&gt;&ndash;&gt;-->
    <bean class="com.SwaggerConfigure"/>
    <!-- 静态资源(js/image)的访问 -->
    <!-- 静态资源文件，不会被Spring MVC拦截 -->
    <!--<mvc:resources mapping="/swagger/**" location="swagger" />-->

    <mvc:resources mapping="/**" location="/WEB-INF/" />
    <!--<mvc:default-servlet-handler/>-->
    <!--<bean id="apiListingResource" class="io.swagger.jaxrs.listing.ApiListingResource"/>-->
    <!--<bean id="swaggerSerializers" class="io.swagger.jaxrs.listing.SwaggerSerializers" scope="singleton"/>-->
    <!--<bean id="swaggerConfig" class="com.wordnik.swagger.jaxrs.config.BeanConfigg">-->
        <!--<property name="resourcePackage" value="com.spring" />-->
        <!--<property name="version" value="1.0.0" />-->
        <!--&lt;!&ndash; <property name="basePath" value="http://localhost:8080/toolsapihttp/services"/> &ndash;&gt;-->
        <!--<property name="basePath" value="" />-->
        <!--<property name="title" value="标题" />-->
        <!--<property name="description" value="test描述" />-->
        <!--<property name="contact" value="" />-->
        <!--<property name="scan" value="true" />-->
    <!--</bean>-->

    <!--<bean id="beanConfig" class="io.swagger.jaxrs.config.BeanConfig">-->
        <!--<property name="title" value="Swagger Sample App"/>-->
        <!--<property name="version" value="1.0.0" />-->
        <!--<property name="schemes" value="http" />-->
        <!--<property name="host" value="localhost:8090" />-->
        <!--<property name="basePath" value="/api"/>-->
        <!--<property name="resourcePackage" value="io.swagger.resources"/>-->
        <!--<property name="scan" value="true"/>-->
    <!--</bean>-->

</beans>