<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <!-- #####################################单节点部署的项目 start##################################### -->
    <bean name="exampleJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.task.ExampleJob"/>
        <property name="jobDataAsMap">
            <map>
                <entry key="timeout" value="5"/>
            </map>
        </property>
    </bean>
    <bean id="exampleJobTrigger"
          class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="exampleJobDetail"/>
        <!-- 延迟触发时间，延迟10秒进行触发 -->
        <property name="startDelay" value="10000"/>
        <!-- 重复触发的时间间隔，5秒 -->
        <property name="repeatInterval" value="5000"/>
    </bean>

    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="exampleJobTrigger"/>
            </list>
        </property>
    </bean>


    <bean id="exampleJob2" class="com.task.ExampleJob2"></bean>
    <bean id="exampleJob2Detail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 指定任务类 -->
        <property name="targetObject" ref="exampleJob2"/>
        <!-- 指定任务执行的方法 -->
        <property name="targetMethod" value="execute"/>
    </bean>
    <bean id="exampleJob2Trigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="exampleJob2Detail"/>
        <!-- 每10秒运行一次 -->
        <property name="cronExpression" value="0/10 * * * * ?"/>
    </bean>

    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <!-- <ref bean="exampleJobTrigger" /> -->
                <ref bean="exampleJob2Trigger"/>
            </list>
        </property>
    </bean>
    <!-- #####################################单节点部署的项目 end##################################### -->



    <!-- #####################################多节点部署的项目 start##################################### -->
    <!-- 定义调用对象和调用对象的方法 -->
    <bean id="SpringQtzJobDetail"
          class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass"  value="com.task.SpringQtz"/>
        <property name="durability" value="true"/>

        <property name="group" value="job_work"/>
        <property name="name" value="job_work_name"/>
    </bean>
    <bean id="SpringQtzJobDetail1"
          class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.task.SpringQtzDemo"/>
        <property name="durability" value="true"/>

        <property name="group" value="job_work1"/>
        <property name="name" value="job_work_name1"/>
    </bean>


    <!-- ======================== 调度触发器 ======================== -->
    <bean id="CronTriggerBean"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="SpringQtzJobDetail"></property>
        <!-- cron表达式 -->
        <property name="cronExpression" value="0/20 * * * * ?"></property>
    </bean>

    <bean id="CronTriggerBean1"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="SpringQtzJobDetail1"></property>
        <!-- cron表达式 -->
        <property name="cronExpression" value="0/30 * * * * ?"></property>
    </bean>

    <!-- ======================== 调度工厂 ======================== -->
    <bean id="SpringJobSchedulerFactoryBean"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">

        <property name="dataSource">
            <ref bean="mySqlDataSource"/>
        </property>
        <property name="applicationContextSchedulerContextKey" value="applicationContext" />
        <property name="configLocation" value="WEB-INF/config/quartz.properties"/>
        <!--启动时更新己存在的Job，这样就不用每次修改targetObject后删除qrtz_job_details表对应记录了-->
        <property name="overwriteExistingJobs" value="true"/>
        <property name="triggers">
            <list>
                <ref bean="CronTriggerBean" />
                <ref bean="CronTriggerBean1" />
            </list>
        </property>
        <property name="jobDetails">
            <list>
                <ref bean="SpringQtzJobDetail" />
                <ref bean="SpringQtzJobDetail1" />
            </list>
        </property>
    </bean>
    <!-- #####################################多节点部署的项目 end##################################### -->
    <!--https://blog.csdn.net/u010046908/article/details/56015388-->
</beans>